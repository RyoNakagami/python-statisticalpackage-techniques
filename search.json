[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "pytest techniques for regmonkeys",
    "section": "",
    "text": "Welcome\nこのQuarto Bookは以下のシリーズと連動して運用されています:",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "pytest techniques for regmonkeys",
    "section": "References",
    "text": "References",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "posts/pytest101/chapter_header.html",
    "href": "posts/pytest101/chapter_header.html",
    "title": "はじめてのpytest",
    "section": "",
    "text": "assert文\npytestを用いたunit testの基本構文を理解するために以下のコードを見てみます．\nassert文はテストの成否を判断するPythonの組み込みコマンドです．assert以下がFalseと評価されると，AssertionErrorを発生させます．\ntest_passingという関数の名前はtest_から始まってますが，pytestはtest_で始まる関数をテスト関数として検出しテストを実行します．",
    "crumbs": [
      "はじめてのpytest"
    ]
  },
  {
    "objectID": "posts/pytest101/chapter_header.html#assert文",
    "href": "posts/pytest101/chapter_header.html#assert文",
    "title": "はじめてのpytest",
    "section": "",
    "text": "def test_passing():\n    assert (1, 2, 3) == (1, 2, 3)\n\n\n\nExample 1 : test_script_001.py \ndef test_passing():\n    assert (1, 2, 3) == (1, 2, 3)\n\n\ndef test_passing2():\n    assert (2, 3, 4) == (2, 3, 4)\n\n\ndef nottest_passing():\n    assert (1, 2, 3) == (1, 2, 3)\nというpytest用のファイルを用意します．これを実行すると\n\n%%bash\npytest -v ./pytest_scripts/test_script_001.py\n\n============================= test session starts ==============================\nplatform linux -- Python 3.11.10, pytest-8.3.3, pluggy-1.5.0 -- /opt/hostedtoolcache/Python/3.11.10/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/python-statisticalpackage-techniques/python-statisticalpackage-techniques\nconfigfile: pyproject.toml\nplugins: anyio-4.6.2.post1\ncollecting ... collected 2 items\n\npytest_scripts/test_script_001.py::test_passing PASSED                   [ 50%]\npytest_scripts/test_script_001.py::test_passing2 PASSED                  [100%]\n\n============================== 2 passed in 0.01s ===============================\n\n\n上記の例では，\n\ncollecting ... collected 2 itemsよりテスト関数が2つ検出された\ntest_passing, test_passing2 が問題なくテストパスした\n\nという情報が表示されています．\npytest -v ./pytest_scripts/test_script_002.py",
    "crumbs": [
      "はじめてのpytest"
    ]
  }
]